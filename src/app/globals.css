@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 243 244 246;
    --foreground: 17 24 39;
    --card: 255 255 255;
    --card-foreground: 17 24 39;
    --primary: 17 24 39;
    --primary-foreground: 255 255 255;
    --muted: 156 163 175;
    --muted-foreground: 107 114 128;
    --accent: 243 244 246;
    --accent-foreground: 17 24 39;
    --border: 107 114 128;

    /* Performance variables - Updated grid size to ~1cm */
    --animation-speed: 1;
    --particle-count: 20;
    --grid-size: 38px;
    --grid-opacity: 0.25;
    --performance-mode: normal;
  }

  .dark {
    --background: 17 24 39;
    --foreground: 34 197 94;
    --card: 31 41 55;
    --card-foreground: 34 197 94;
    --primary: 34 197 94;
    --primary-foreground: 17 24 39;
    --muted: 107 114 128;
    --muted-foreground: 156 163 175;
    --accent: 31 41 55;
    --accent-foreground: 34 197 94;
    --border: 34 197 94;
  }

  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: "Courier New", "Monaco", "Menlo", "Ubuntu Mono", monospace;
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }

  /* Performance optimizations */
  .performance-high {
    --animation-speed: 0.5;
    --particle-count: 10;
    --grid-opacity: 0.15;
  }

  .performance-low {
    --animation-speed: 2;
    --particle-count: 5;
    --grid-opacity: 0.1;
  }
}

@layer components {
  /* Enhanced Pixel Border */
  .pixel-border {
    border-style: solid;
    border-width: 2px;
    position: relative;
    image-rendering: pixelated;
  }

  .pixel-border::before {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(90deg, currentColor 50%, transparent 50%),
      linear-gradient(currentColor 50%, transparent 50%);
    background-size: 4px 4px;
    z-index: -1;
    opacity: 0.2;
  }

  /* Optimized Component Grid Background */
  .component-grid {
    position: relative;
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform;
  }

  .component-grid::before {
    content: "";
    position: absolute;
    inset: 0;
    background-size: var(--grid-size) var(--grid-size);
    opacity: 0;
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: -1;
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
    pointer-events: none;
    will-change: opacity, transform;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
  }

  /* GPU-accelerated animation */
  .component-grid.animate::before {
    animation: gridMoveOptimized calc(15s / var(--animation-speed)) linear infinite;
  }

  .component-grid:hover::before {
    opacity: var(--grid-opacity);
  }

  /* Optimized grid patterns using CSS custom properties */
  .component-grid.light::before {
    background-image: linear-gradient(rgba(75, 85, 99, var(--grid-opacity)) 2px, transparent 2px),
      linear-gradient(90deg, rgba(75, 85, 99, var(--grid-opacity)) 2px, transparent 2px),
      radial-gradient(
        circle at calc(var(--grid-size) / 2) calc(var(--grid-size) / 2),
        rgba(75, 85, 99, calc(var(--grid-opacity) * 0.5)) 2px,
        transparent 2px
      );
  }

  .component-grid.dark::before {
    background-image: linear-gradient(rgba(34, 197, 94, var(--grid-opacity)) 2px, transparent 2px),
      linear-gradient(90deg, rgba(34, 197, 94, var(--grid-opacity)) 2px, transparent 2px),
      radial-gradient(
        circle at calc(var(--grid-size) / 2) calc(var(--grid-size) / 2),
        rgba(34, 197, 94, calc(var(--grid-opacity) * 0.5)) 2px,
        transparent 2px
      );
  }

  /* High-performance grid animation using transform3d */
  @keyframes gridMoveOptimized {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(var(--grid-size), var(--grid-size), 0);
    }
  }

  /* Optimized floating pixels with GPU acceleration */
  .floating-pixel {
    animation: floatOptimized linear infinite;
    will-change: transform;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
  }

  @keyframes floatOptimized {
    0% {
      transform: translate3d(0, 100vh, 0) rotate(0deg);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translate3d(0, -10px, 0) rotate(360deg);
      opacity: 0;
    }
  }

  /* Pixel Art Elements */
  .pixel-art-logo {
    position: relative;
    image-rendering: pixelated;
  }

  .pixel-pattern::before {
    content: "";
    position: absolute;
    inset: 2px;
    background: radial-gradient(circle at 25% 25%, currentColor 1px, transparent 1px),
      radial-gradient(circle at 75% 75%, currentColor 1px, transparent 1px);
    background-size: 4px 4px;
  }

  .pixel-avatar {
    position: relative;
    border: 2px solid currentColor;
    image-rendering: pixelated;
  }

  .pixel-face::before {
    content: "";
    position: absolute;
    inset: 8px;
    background: currentColor;
    mask: radial-gradient(circle at 30% 40%, transparent 3px, black 4px 6px, transparent 7px),
      radial-gradient(circle at 70% 40%, transparent 3px, black 4px 6px, transparent 7px),
      linear-gradient(transparent 60%, black 60% 70%, transparent 70%);
    mask-composite: intersect;
  }

  /* Optimized loading animation */
  .loading-pixels {
    display: flex;
    justify-content: center;
    gap: 4px;
  }

  .pixel-loader {
    width: 40px;
    height: 40px;
    background:
      linear-gradient(currentColor 0 0) 0 0,
      linear-gradient(currentColor 0 0) 50% 0,
      linear-gradient(currentColor 0 0) 100% 0,
      linear-gradient(currentColor 0 0) 0 50%,
      linear-gradient(currentColor 0 0) 50% 50%,
      linear-gradient(currentColor 0 0) 100% 50%,
      linear-gradient(currentColor 0 0) 0 100%,
      linear-gradient(currentColor 0 0) 50% 100%,
      linear-gradient(currentColor 0 0) 100% 100%;
    background-size: 8px 8px;
    background-repeat: no-repeat;
    animation: pixelLoadOptimized 1.5s infinite;
    will-change: opacity;
  }

  @keyframes pixelLoadOptimized {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.3;
    }
  }

  /* Optimized glitch effect */
  .glitch-text {
    position: relative;
  }

  .glitch-text::before,
  .glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    will-change: transform;
  }

  .glitch-text::before {
    animation: glitchOptimized1 0.5s infinite;
    color: #ff0000;
    z-index: -1;
  }

  .glitch-text::after {
    animation: glitchOptimized2 0.5s infinite;
    color: #00ff00;
    z-index: -2;
  }

  @keyframes glitchOptimized1 {
    0%,
    100% {
      transform: translate3d(0, 0, 0);
    }
    20% {
      transform: translate3d(-1px, 1px, 0);
    }
    40% {
      transform: translate3d(-1px, -1px, 0);
    }
    60% {
      transform: translate3d(1px, 1px, 0);
    }
    80% {
      transform: translate3d(1px, -1px, 0);
    }
  }

  @keyframes glitchOptimized2 {
    0%,
    100% {
      transform: translate3d(0, 0, 0);
    }
    20% {
      transform: translate3d(1px, -1px, 0);
    }
    40% {
      transform: translate3d(1px, 1px, 0);
    }
    60% {
      transform: translate3d(-1px, -1px, 0);
    }
    80% {
      transform: translate3d(-1px, 1px, 0);
    }
  }

  /* Optimized pixel glow */
  .pixel-glow {
    animation: pixelGlowOptimized calc(2s / var(--animation-speed)) ease-in-out infinite;
    will-change: filter;
  }

  @keyframes pixelGlowOptimized {
    0%,
    100% {
      filter: drop-shadow(0 0 2px currentColor);
    }
    50% {
      filter: drop-shadow(0 0 8px currentColor) drop-shadow(0 0 12px currentColor);
    }
  }

  /* Optimized typewriter animation */
  .typing-animation {
    opacity: 0;
    animation: typeInOptimized 0.5s ease-in forwards;
    will-change: opacity, transform;
  }

  @keyframes typeInOptimized {
    from {
      opacity: 0;
      transform: translate3d(-10px, 0, 0);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }

  /* Optimized slide in animation */
  .slide-in {
    animation: slideInOptimized 0.6s ease-out;
    will-change: opacity, transform;
  }

  @keyframes slideInOptimized {
    from {
      opacity: 0;
      transform: translate3d(0, 20px, 0);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }

  /* Optimized skill items animation */
  .skill-item {
    opacity: 0;
    animation: skillPopOptimized 0.5s ease-out forwards;
    will-change: opacity, transform;
  }

  @keyframes skillPopOptimized {
    0% {
      opacity: 0;
      transform: scale3d(0.8, 0.8, 1) rotate(-5deg);
    }
    70% {
      transform: scale3d(1.1, 1.1, 1) rotate(2deg);
    }
    100% {
      opacity: 1;
      transform: scale3d(1, 1, 1) rotate(0deg);
    }
  }

  /* ASCII Art Styling */
  .ascii-art {
    font-family: "Courier New", monospace;
    line-height: 1;
    letter-spacing: 0;
    white-space: pre;
  }

  /* Enhanced Touch Targets for Mobile */
  .touch-target {
    min-height: 44px;
    min-width: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  /* Optimized pixel button effect */
  .pixel-button {
    position: relative;
    transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform;
  }

  .pixel-button:hover {
    transform: translate3d(0, -1px, 0);
  }

  .pixel-button:active {
    transform: translate3d(0, 1px, 0);
  }

  /* Optimized terminal text effect */
  .terminal-text p {
    margin: 0.5rem 0;
    position: relative;
  }

  .terminal-text p::before {
    content: "â–ˆ";
    position: absolute;
    right: -1ch;
    animation: blinkOptimized 1s infinite;
    opacity: 0;
    will-change: opacity;
  }

  @keyframes blinkOptimized {
    0%,
    50% {
      opacity: 0;
    }
    51%,
    100% {
      opacity: 1;
    }
  }
}

/* Custom Scrollbar */
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: currentColor;
  border: 2px solid transparent;
  background-clip: content-box;
  border-radius: 0;
}

::-webkit-scrollbar-thumb:hover {
  background: currentColor;
  background-clip: content-box;
}

/* Optimized smooth transitions */
* {
  transition: color 0.2s cubic-bezier(0.4, 0, 0.2, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), border-color
    0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Performance-based animation controls */
.no-grid-animation .component-grid::before {
  animation: none !important;
}

.no-floating-pixels .floating-pixel {
  display: none;
}

.no-glitch-effects .glitch-text::before,
.no-glitch-effects .glitch-text::after {
  display: none;
}

.no-typewriter .typing-animation {
  animation: none;
  opacity: 1;
}

.no-hover-animations *:hover {
  transform: none !important;
  scale: 1 !important;
}

.no-hover-animations .component-grid:hover::before {
  opacity: 0 !important;
}

/* Reduced motion support */
.reduced-motion *,
.reduced-motion *::before,
.reduced-motion *::after {
  animation-duration: 0.01ms !important;
  animation-iteration-count: 1 !important;
  transition-duration: 0.01ms !important;
}

/* Performance mode optimizations */
.performance-mode-high .floating-pixel {
  animation-duration: calc(2s / var(--animation-speed));
}

.performance-mode-high .component-grid::before {
  animation-duration: calc(8s / var(--animation-speed));
}

.performance-mode-low .floating-pixel {
  animation-duration: calc(6s / var(--animation-speed));
}

.performance-mode-low .component-grid::before {
  animation-duration: calc(25s / var(--animation-speed));
}

/* Dynamic particle count */
.floating-pixel:nth-child(n + 21) {
  display: none;
}

/* Mobile optimizations */
@media (max-width: 768px) {
  :root {
    --grid-size: 30px;
    --grid-opacity: 0.2;
  }

  .pixel-border::before {
    background-size: 2px 2px;
  }

  .component-grid.light::before {
    background-image: linear-gradient(rgba(75, 85, 99, 0.2) 1px, transparent 1px),
      linear-gradient(90deg, rgba(75, 85, 99, 0.2) 1px, transparent 1px);
  }

  .component-grid.dark::before {
    background-image: linear-gradient(rgba(34, 197, 94, 0.15) 1px, transparent 1px),
      linear-gradient(90deg, rgba(34, 197, 94, 0.15) 1px, transparent 1px);
  }

  /* Reduce animations on mobile for better performance */
  .floating-pixel:nth-child(n + 11) {
    display: none;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .pixel-border::before {
    opacity: 0.5;
  }

  .floating-pixel {
    opacity: 0.8;
  }
}

/* Prefers reduced motion */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Focus styles for accessibility */
button:focus-visible,
a:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

/* GPU layer promotion for better performance */
.component-grid,
.floating-pixel,
.pixel-glow,
.glitch-text::before,
.glitch-text::after {
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
}
